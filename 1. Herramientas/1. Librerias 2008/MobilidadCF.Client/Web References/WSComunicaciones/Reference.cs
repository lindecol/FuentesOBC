//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.7905
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.7905.
// 
namespace MovilidadCF.Client.WSComunicaciones {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataAccessSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class DataAccess : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public DataAccess() {
            this.Url = "http://localhost/WSComunicaciones/DataAccess.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFechaSistema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFechaSistema() {
            object[] results = this.Invoke("GetFechaSistema", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFechaSistema(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFechaSistema", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetFechaSistema(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CargarDatos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CargarDatos(string sCodPrograma, string sCodProceso, string sIdTerminal, string sIdSistema, bool bComprimir, ref string sIdComunicacion, object[] Params) {
            object[] results = this.Invoke("CargarDatos", new object[] {
                        sCodPrograma,
                        sCodProceso,
                        sIdTerminal,
                        sIdSistema,
                        bComprimir,
                        sIdComunicacion,
                        Params});
            sIdComunicacion = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCargarDatos(string sCodPrograma, string sCodProceso, string sIdTerminal, string sIdSistema, bool bComprimir, string sIdComunicacion, object[] Params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CargarDatos", new object[] {
                        sCodPrograma,
                        sCodProceso,
                        sIdTerminal,
                        sIdSistema,
                        bComprimir,
                        sIdComunicacion,
                        Params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCargarDatos(System.IAsyncResult asyncResult, out string sIdComunicacion) {
            object[] results = this.EndInvoke(asyncResult);
            sIdComunicacion = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmarCargaDatos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfirmarCargaDatos(string sCodPrograma, string sCodProceso, string sIdTerminal, string sIdSistema, string sIdComunicaciones, string sError) {
            object[] results = this.Invoke("ConfirmarCargaDatos", new object[] {
                        sCodPrograma,
                        sCodProceso,
                        sIdTerminal,
                        sIdSistema,
                        sIdComunicaciones,
                        sError});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConfirmarCargaDatos(string sCodPrograma, string sCodProceso, string sIdTerminal, string sIdSistema, string sIdComunicaciones, string sError, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConfirmarCargaDatos", new object[] {
                        sCodPrograma,
                        sCodProceso,
                        sIdTerminal,
                        sIdSistema,
                        sIdComunicaciones,
                        sError}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndConfirmarCargaDatos(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IniciarDescargarDatos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] IniciarDescargarDatos(string sCodPrograma, string sCodProceso, string sIdterminal, string sIdSistema, ref string sIdComunicacion) {
            object[] results = this.Invoke("IniciarDescargarDatos", new object[] {
                        sCodPrograma,
                        sCodProceso,
                        sIdterminal,
                        sIdSistema,
                        sIdComunicacion});
            sIdComunicacion = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIniciarDescargarDatos(string sCodPrograma, string sCodProceso, string sIdterminal, string sIdSistema, string sIdComunicacion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IniciarDescargarDatos", new object[] {
                        sCodPrograma,
                        sCodProceso,
                        sIdterminal,
                        sIdSistema,
                        sIdComunicacion}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndIniciarDescargarDatos(System.IAsyncResult asyncResult, out string sIdComunicacion) {
            object[] results = this.EndInvoke(asyncResult);
            sIdComunicacion = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarDescargaDatos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EnviarDescargaDatos(string sIdComunicaciones, string sError, string sDatosEnviados) {
            object[] results = this.Invoke("EnviarDescargaDatos", new object[] {
                        sIdComunicaciones,
                        sError,
                        sDatosEnviados});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnviarDescargaDatos(string sIdComunicaciones, string sError, string sDatosEnviados, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnviarDescargaDatos", new object[] {
                        sIdComunicaciones,
                        sError,
                        sDatosEnviados}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndEnviarDescargaDatos(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DescargarNuevaVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DescargarNuevaVersion(string CodigoPrograma, string VersionActual) {
            object[] results = this.Invoke("DescargarNuevaVersion", new object[] {
                        CodigoPrograma,
                        VersionActual});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDescargarNuevaVersion(string CodigoPrograma, string VersionActual, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DescargarNuevaVersion", new object[] {
                        CodigoPrograma,
                        VersionActual}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDescargarNuevaVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
